# Config for PanTools pipeline on test dataset

### JAVA SETTINGS ###

# Java initial heap size (g)
Xms: 20
# Java maximum heap size (g)
Xmx: 40
# path to PanTools jar file; only for development!!!
jar:
# nice priority
nice:

### OUTPUT ###

# custom scratch directory (default is system default)
scratch:
# path for pantools output
results: results/test
# path for construction output (RAM or SSD is recommended)
construction: results/test

### PARAMETERS ###
genomes: resources/test_data/metadata/genome_locations.txt
annotations: resources/test_data/metadata/annotation_locations.txt
proteomes: resources/test_data/metadata/proteome_locations.txt
functions: resources/test_data/metadata/function_locations.txt
vcf: resources/test_data/metadata/variant_locations.txt
pav: resources/test_data/metadata/pav_locations.txt
phenotypes: resources/test_data/metadata/phenotypes_chrI.csv
phasing: resources/test_data/metadata/phasing_information.txt
repeats:
synteny:
blast: resources/test_data/proteomes/BY_chrI.pep.fa
short_read_1: resources/test_data/reads/SRR800844_chrI_1.fq.gz
short_read_2: resources/test_data/reads/SRR800844_chrI_2.fq.gz
gene_selection: ""

### OPTIONAL ARGUMENTS ###
add_annotations.opts: "--connect"
add_antismash.opts: ""
add_functions.opts: ""
add_genomes.opts: ""
add_pavs.opts: ""
add_phasing.opts: ""
add_phenotypes.opts: ""
add_repeats.opts: ""
add_synteny.opts: ""
add_variants.opts: ""
ani.opts: "-p=Name"
blast.opts: ""
build_pangenome.opts: "--kmer-size=13"
build_panproteome.opts: ""
busco_protein.opts: ""
busco_protein.odb10: "" # required if relaxation is not set
calculate_dn_ds.opts: ""
calculate_synteny.opts: "--run"
change_grouping.opts: ""
compare_go.opts: ""
consensus_tree.opts: "-v --pavs"
core_phylogeny.mode: "ML"
core_phylogeny.opts: "-p=Name -v --pavs"
core_unique_thresholds.opts: ""
create_tree_template.opts: ""
export_pangenome.opts: ""
find_genes_by_annotation.opts: ""
find_genes_by_name.opts: ""
find_genes_in_region.opts: ""
find_kmer.opts: ""
function_overview.opts: ""
functional_classification.opts: "-p=Name"
gene_classification.opts: "--mlsa -p=Name" # output from --mlsa is used for mlsa
gene_retention.opts: ""
genome_alignment.opts: ""
go_enrichment.opts: ""
group.relaxation: 8 # will calculate using BUSCO if empty
group.opts: ""
group_info.opts: ""
grouping_overview.opts: ""
kmer_classification.opts: ""
kmer_info.opts: ""
locate_genes.opts: ""
map.opts: ""
metrics.opts: ""
mlsa.opts: "-p=Name"
mlsa_concatenate.opts: ""
mlsa_find_genes.opts: "--extensive"
move_grouping.opts: ""
msa.opts: "-p"
optimal_grouping.opts: ""
order_matrix.opts: ""
pangenome_structure.opts: "--pavs"
kmer_structure.opts: ""
remove_annotations.opts: ""
remove_functions.opts: ""
remove_grouping.opts: ""
remove_nodes.opts: ""
remove_pavs.opts: ""
remove_phenotypes.opts: ""
remove_variants.opts: ""
rename_matrix.opts: ""
rename_phylogeny.opts: ""
repeat_overview.opts: ""
retrieve_features.opts: ""
retrieve_regions.opts: ""
root_phylogeny.opts: ""
sequence_visualization.opts: ""
show_go.opts: ""
synteny_overview.opts: ""
validate_grouping.opts: ""
variation_overview.opts: ""
